/*
 * elemines: an EFL minesweeper
 * Copyright (C) 2012-2013 Jerome Pinot <ngc891@gmail.com> and various
 * contributors (see AUTHORS).
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
 * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
 * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

images {
  image: "bomb.png"  COMP;
  image: "bomb-sad.png"  COMP;
  image: "clock.png" COMP;
  image: "empty.png"  COMP;
  image: "fire1.png" COMP;
  image: "fire2.png" COMP;
  image: "fire3.png" COMP;
  image: "fire4.png" COMP;
  image: "fire5.png" COMP;
  image: "fire6.png" COMP;
  image: "fire7.png" COMP;
  image: "fire8.png" COMP;
  image: "flag1.png" COMP;
  image: "flag2.png" COMP;
  image: "flag3.png" COMP;
  image: "flag4.png" COMP;
  image: "flowers.png"  COMP;
  image: "grass.png" COMP;
  image: "grass-s.png" COMP;
  image: "grass-n.png" COMP;
  image: "grass-e.png" COMP;
  image: "grass-w.png" COMP;
  image: "hole.png"  COMP;
  image: "mushrooms.png"  COMP;
  image: "sand.png"  COMP;
  image: "sky.png" COMP;
  image: "stones.png"  COMP;
  /* icons */
  image: "refresh.png"  COMP;
  image: "pause.png"  COMP;
  image: "config.png" COMP;
  image: "score.png"  COMP;
  image: "about.png"  COMP;
  image: "quit.png"  COMP;
}

fonts {
  font: "Inconsolata.otf" "Sans";
  font: "Bangers.ttf" "Title";
}

data {
  item: "MINES"  "12";
  item: "SIZE_X" "10";
  item: "SIZE_Y" "10";
  item: "width"  "500";
  item: "height" "600";
}

color_classes {
  color_class {
    name: "standard";
    color:    0   0   0 255;
    color2: 150 150 150  80;
    color3: 220 220 220  40;
  }
  color_class {
    name: "win";
    color:  255   0   0 255;
    color2: 150 150 150  80;
    color3: 220 220 220  40;
  }
  color_class {
    name: "win2";
    color:    0 255   0 255;
    color2: 150 150 150  80;
    color3: 220 220 220  40;
  }
}

collections {

  /* new icons for toolbar */
#define ELM_ICON(Name)                                                  \
   group {                                                              \
      name: "elm/icon/"Name"/default";                                  \
      alias: "elm/icon/toolbar/"Name"/default";                         \
      min: 32 32;                                                       \
      parts {                                                           \
         part {                                                         \
            name: "base";                                               \
            description {                                               \
               state: "default" 0.0;                                    \
               aspect: 1.0 1.0;                                         \
               aspect_preference: BOTH;                                 \
               image.normal: Name".png";                                \
            }                                                           \
         }                                                              \
      }                                                                 \
   }

   ELM_ICON(refresh);
   ELM_ICON(pause);
   ELM_ICON(config);
   ELM_ICON(score);
   ELM_ICON(about);
   ELM_ICON(quit);
 
  /* background */
  group {
    name: "bg";
    parts {
      part {
        name: "bg";
        type: IMAGE;
        description {
          state: "default" 0.0;
          image.normal: "sky.png";
          fill {
            size {
              relative: 0.0 0.0;
              offset: 150 180;
            }
          }
        }
      }
    }
  }

  /* timer text */
  group {
    name: "timer";
    parts {
      part {
        name: "clock";
        type: IMAGE;
        description {
          state: "default" 0.0;
          image {
            normal: "clock.png";
          }
          rel1 {
            relative: 0.0 0.0;
            offset: 50 0;
          }
          rel2 {
            relative: 0.0 0.0;
            offset: 100 50;
          }
        }
      }
      part {
        name: "time";
        type: TEXT;
        effect: SOFT_SHADOW;
        scale: 1;
        description {
          state: "default" 0.0;
          color_class: "standard";
          text {
            text: "00:00";
            font: "Sans";
            size: 28;
            align: 0.5 0.5;
          }
          rel1 {
            relative: 0.0 0.0;
            offset: 100 0;
          }
          rel2 {
            relative: 1.0 1.0;
            offset: 0 0;
          }
        }
      }
    }
  }

  /* remaining mines counter */
  group {
    name: "mines";
    parts {
      part {
        name: "icon";
        type: IMAGE;
        description {
          state: "default" 0.0;
          image {
            normal: "bomb.png";
          }
          rel1 {
            relative: 0.0 0.0;
            offset: 70 0;
          }
          rel2 {
            relative: 0.0 0.0;
            offset: 120 50;
          }
        }
      }
      part {
        name: "mines";
        type: TEXT;
        effect: SOFT_SHADOW;
        scale: 1;
        description {
          state: "default" 0.0;
          color_class: "standard";
          text {
            text: "";
            font: "Sans";
            size: 28;
            align: 0.5 0.5;
          }
          rel1 {
            relative: 0.0 0.0;
            offset: 80 0;
          }
          rel2 {
            relative: 1.0 1.0;
            offset: 0 0;
          }
        }
      }
    }
  }

  /* The board and its content */
#define GRASS(Side)                                                     \
  group {                                                               \
     name: "grass/"Side;                                                \
     parts {                                                            \
        part {                                                          \
           type: IMAGE;                                                 \
           mouse_events: 0;                                             \
           repeat_events: 0;                                            \
           description {                                                \
              image.normal: "grass-"Side".png";                         \
              visible: 1;                                               \
           }                                                            \
        }                                                               \
     }                                                                  \
  }
  GRASS(e);
  GRASS(n);
  GRASS(s);
  GRASS(w);

  group {
     name: "board";
     broadcast_signal: 0;
     parts {
        part {
           name: "board";
           type: TABLE;

           description {
              table.homogeneous: TABLE;
           }

#define ITEM(X, Y, Source)                                              \
           item {                                                       \
              name: #X"/"#Y;                                            \
              type: GROUP;                                              \
              source: Source;                                           \
              position: X Y;                                            \
              weight: 1 1;                                              \
              align: -1 -1;                                             \
           }

#define ITEM_TOP_BOTTOM(X)                                              \
           ITEM(X, 0, "grass/s");                                       \
           ITEM(X, 11, "grass/n");

#define LINE(Y)                                                         \
           ITEM(0, Y, "grass/w");                                       \
           ITEM(1, Y, "cell");                                          \
           ITEM(2, Y, "cell");                                          \
           ITEM(3, Y, "cell");                                          \
           ITEM(4, Y, "cell");                                          \
           ITEM(5, Y, "cell");                                          \
           ITEM(6, Y, "cell");                                          \
           ITEM(7, Y, "cell");                                          \
           ITEM(8, Y, "cell");                                          \
           ITEM(9, Y, "cell");                                          \
           ITEM(10, Y, "cell");                                         \
           ITEM(11, Y, "grass/e");

           table {
              items  {
                 ITEM_TOP_BOTTOM(1);
                 ITEM_TOP_BOTTOM(2);
                 ITEM_TOP_BOTTOM(3);
                 ITEM_TOP_BOTTOM(4);
                 ITEM_TOP_BOTTOM(5);
                 ITEM_TOP_BOTTOM(6);
                 ITEM_TOP_BOTTOM(7);
                 ITEM_TOP_BOTTOM(8);
                 ITEM_TOP_BOTTOM(9);
                 ITEM_TOP_BOTTOM(10);
                 LINE(1);
                 LINE(2);
                 LINE(3);
                 LINE(4);
                 LINE(5);
                 LINE(6);
                 LINE(7);
                 LINE(8);
                 LINE(9);
                 LINE(10);
              }
           }
        }
        part {
           name: "congrat";
           type: GROUP;
           source: "congratulation";
           description {
              visible: 0;
              color: 0 0 0 0;
           }
           description {
              state: congrat 0.0;
              inherit: default 0.0;
              visible: 1;
           }
           description {
              state: congrat 1.0;
              inherit: congrat 0.0;
              color: 255 255 255 255;
           }
        }
     }

     programs {
        program {
           signal: "congrat";
           action: STATE_SET congrat 0.0;
           target: congrat;
           after: congrat/anim;
        }
        program {
           name: congrat/anim;
           action: STATE_SET congrat 1.0;
           transition: LINEAR 1.0;
           target: congrat;
        }
        program {
           signal: reset;
           action: STATE_SET default 0.0;
           target: congrat;
        }
     }
  }

  /* blank cell, for centering the board */
  group {
    name: "blank";
    parts {
      part {
        name: "bg";
        type: RECT;
        description {
          state: "default" 0.0;
          color: 0 0 0 0;
          rel1 {
            relative: 0.0 0.0;
            offset: 1 1;
          }
          rel2 {
            relative: 1.0 1.0;
            offset: -1 -1;
          }
        }
      }
    }
  }

  /* text for pause inwin */
  group {
   name: "pause";
    parts {
      part {
        name: "pause bg";
        type: IMAGE;
        description {
          state: "default" 0.0;
          image {
            normal: "sky.png";
          }
          rel1 {
            relative: 0.0 0.0;
            offset: 0 0;
          }
          rel2 {
            relative: 1.0 1.0;
            offset: 0 0;
          }
        }
      }
      part {
        name: "pause text";
        type: TEXT;
        effect: SOFT_SHADOW;
        scale: 1;
        description {
          state: "default" 0.0;
          color_class: "standard";
          text {
            text: "Pause!";
            font: "Title";
            size: 40;
            align: 0.5 0.5;
          }
          rel1 {
            relative: 0.0 0.0;
            offset: 0 0;
          }
          rel2 {
            relative: 1.0 1.0;
            offset: 0 0;
          }
        }
      }
    }
  }

  /* main group: cell control */
  group { 
     name: "cell";
     parts {
        /* red selection box */
        part {
           name: "border";
           type: RECT;
           mouse_events: 0;
           repeat_events: 0;
           description {
              state: "default" 0.0;
              color: 255 255 255 0;
              rel1 {
                 relative: 0.0 0.0;
                 offset: 0 0;
              }
              rel2 {
                 relative: 1.0 1.0;
                 offset: 0 0;
              }
           }
           description {
              state: "over" 0.0;
              inherit: "default" 0.0;
              color: 255 0 0 255;
           }
        }
        /* 2 standard backgrounds */
        part {
           name: "bg";
           type: IMAGE;
           mouse_events: 0;
           repeat_events: 0;
           description {
              state: "default" 0.0;
              image {
                 normal: "grass.png";
              }
              rel1 {
                 relative: 0.0 0.0;
                 offset: 1 1;
              }
              rel2 {
                 relative: 1.0 1.0;
                 offset: -1 -1;
              }
           }
           description {
              state: "clean" 0.1;
              inherit: "default" 0.0;
              image {
                 normal: "sand.png";
              }
           }
        }
        /* end game: overlay all the board */
        part {
           name: "cover";
           type: RECT;
           mouse_events: 0;
           repeat_events: 0;
           description {
              state: "default" 0.0;
              color: 0 0 0 0;
              rel1 {
                 relative: 0.0 0.0;
                 offset: 1 1;
              }
              rel2 {
                 relative: 1.0 1.0;
                 offset: -1 -1;
              }
           }
           description {
              state: "grey" 0.1;
              inherit: "default" 0.0;
              color: 150 150 150 150;
           }
           description {
              state: "lose" 0.2;
              inherit: "default" 0.0;
              color: 255 126 0 120;
           }
           description {
              state: "win" 0.3;
              inherit: "default" 0.0;
              color: 0 0 0 0;
           }
        }
        /* scenery objects layers */
        part {
           name: "flowers";
           type: IMAGE;
           mouse_events: 0;
           repeat_events: 0;
           description {
              state: "default" 0.0;
              image {
                 normal: "empty.png";
              }
              rel1 {
                 relative: 0.0 0.0;
                 offset: 1 1;
              }
              rel2 {
                 relative: 1.0 1.0;
                 offset: -1 -1;
              }
           }
           description {
              state: "flowers" 0.1;
              inherit: "default" 0.0;
              image {
                 normal: "flowers.png";
              }
           }
        }
        part {
           name: "mushrooms";
           type: IMAGE;
           mouse_events: 0;
           repeat_events: 0;
           description {
              state: "default" 0.0;
              image {
                 normal: "empty.png";
              }
              rel1 {
                 relative: 0.0 0.0;
                 offset: 1 1;
              }
              rel2 {
                 relative: 1.0 1.0;
                 offset: -1 -1;
              }
           }
           description {
              state: "mushrooms" 0.1;
              inherit: "default" 0.0;
              image {
                 normal: "mushrooms.png";
              }
           }
        }
        part {
           name: "stones";
           type: IMAGE;
           mouse_events: 0;
           repeat_events: 0;
           description {
              state: "default" 0.0;
              image {
                 normal: "empty.png";
              }
              rel1 {
                 relative: 0.0 0.0;
                 offset: 1 1;
              }
              rel2 {
                 relative: 1.0 1.0;
                 offset: -1 -1;
              }
           }
           description {
              state: "stones" 0.1;
              inherit: "default" 0.0;
              image {
                 normal: "stones.png";
              }
           }
        }
        /* text that shows neighbours */
        part {
           name: "hint";
           type: TEXT;
           effect: SOFT_SHADOW;
           scale: 1;
           mouse_events: 0;
           repeat_events: 0;
           description {
              state: "default" 0.0;
              color: 0 0 0 255;
              color2: 255 255 255 140;
              color3: 100 100 100 140;
              text {
                 text: "";
                 font: "Sans";
                 size: 28;
                 align: 0.5 0.5;
              }
              rel1 {
                 relative: 0.0 0.0;
                 offset: 0 0;
              }
              rel2 {
                 relative: 1.0 1.0;
                 offset: 0 0;
              }
           }
           /* change colours according to neighbours */
#define CELL_TEXT_COLOR(State, Color)                                   \
           description {                                                \
              state: State 0.1;                                         \
              inherit: "default" 0.0;                                   \
              color: Color;                                             \
              text.text: State;                                         \
           }
           CELL_TEXT_COLOR("1", 14 87 12 255);
           CELL_TEXT_COLOR("2", 21 17 231 255);
           CELL_TEXT_COLOR("3", 233 232 16 255);
           CELL_TEXT_COLOR("4", 233 98 15 255);
           CELL_TEXT_COLOR("5", 230 15 13 255);
           CELL_TEXT_COLOR("6", 240 0 240 255);
           CELL_TEXT_COLOR("7", 255 255 255 255);
           CELL_TEXT_COLOR("8", 0 0 0 255);
        }
        /* flag/bomb/boom */
        part {
           name: "image";
           type: IMAGE;
           mouse_events: 0;
           repeat_events: 0;
           description {
              state: "default" 0.0;
              visible: 0;
              image {
                 normal: "flag1.png";
              }
              rel1 {
                 relative: 0.0 0.0;
                 offset: 1 1;
              }
              rel2 {
                 relative: 1.0 1.0;
                 offset: -1 -1;
              }
           }
           description {
              state: "flag" 0.1;
              inherit: "default" 0.0;
              visible: 1;
              image {
                 normal: "flag1.png";
                 tween: "flag2.png";
                 tween: "flag3.png";
                 tween: "flag4.png";
              }
           }
           description {
              state: "boom" 0.2;
              inherit: "default" 0.0;
              visible: 1;
              image {
                 normal: "hole.png";
                 tween: "fire1.png";
                 tween: "fire2.png";
                 tween: "fire3.png";
                 tween: "fire4.png";
                 tween: "fire5.png";
                 tween: "fire6.png";
                 tween: "fire7.png";
                 tween: "fire8.png";
                 tween: "hole.png";
              }
           }
           description {
              state: "bomb" 0.3;
              inherit: "default" 0.0;
              visible: 1;
              image {
                 normal: "bomb.png";
              }
           }
        }
        /* to detect mouse move */
        part {
           name: "overlay";
           type: RECT;
           description {
              state: "default" 0.0;
              color: 255 255 255 0;
              rel1 {
                 relative: 0.0 0.0;
                 offset: 0 0;
              }
              rel2 {
                 relative: 1.0 1.0;
                 offset: 0 0;
              }
           }
        }

      programs {

        /* show the nice red box on mouse over */
        program {
          signal: "mouse,in";
          source: "overlay";
          action: STATE_SET "over" 0.0;
          target: "border";
          transition: SINUSOIDAL 0.2;
        }
        program {
          signal: "mouse,out";
          source: "overlay";
          action: STATE_SET "default" 0.0;
          target: "border";
          transition: SINUSOIDAL 0.7;
        }
        program {
           signal: "reset";
           action: STATE_SET "default" 0.0;
           target: "flowers";
           target: "mushrooms";
           target: "image";
           target: "cover";
           target: "bg";
           target: "hint";
        }
        program {
           signal: "digg";
           action: STATE_SET "default" 0.0;
           target: "flowers";
           target: "mushrooms";
           after: "digg/bg";
        }
        program {
           name: "digg/bg";
           action: STATE_SET "clean" 0.0;
           target: "bg";
        }

        program {
          signal: "default";
          action: STATE_SET "default" 0.0;
          target: "image";
        }
        program {
          signal: "flag";
          action: STATE_SET "flag" 0.1;
          transition: LINEAR 1.0;
          target: "image";
        }
        program {
          signal: "boom";
          action: STATE_SET "boom" 0.2;
          transition: LINEAR 2.0;
          target: "image";
        }
#define CELL_STATE_SET(Signal, Target)                                  \
        program {                                                       \
           signal: Signal;                                              \
           action: STATE_SET Signal 0.3;                                \
           target: Target;                                              \
        }
        CELL_STATE_SET("bomb", "image");
        /* change colours */
        CELL_STATE_SET("1", "hint");
        CELL_STATE_SET("2", "hint");
        CELL_STATE_SET("3", "hint");
        CELL_STATE_SET("4", "hint");
        CELL_STATE_SET("5", "hint");
        CELL_STATE_SET("6", "hint");
        CELL_STATE_SET("7", "hint");
        CELL_STATE_SET("8", "hint");
        /* scenery */
        CELL_STATE_SET("flowers", "flowers");
        CELL_STATE_SET("mushrooms", "mushrooms");
        CELL_STATE_SET("stones", "stones");
        /* win/lose */
        program {
          name: "grey";
          signal: "grey";
          action: STATE_SET "grey" 0.1;
          target: "cover";
        }
        program {
          signal: "lose";
          action: STATE_SET "lose" 0.2;
          target: "cover";
          transition: BOUNCE 1.0 0.5 10.0;
          after: "grey";
        }
        program {
          signal: "win";
          action: STATE_SET "win" 0.3;
          target: "cover";
          transition: LINEAR 3.0;
        }
      }
    }
  }
  /* congratulation message */
  group {
    name: "congratulation";
    parts {
      part {
        name: "win bg";
        type: RECT;
        description {
          state: "default" 0.0;
          color: 0 0 0 0;
          rel1 {
            relative: 0.0 0.0;
            offset: 0 0;
          }
          rel2 {
            relative: 1.0 1.0;
            offset: 0 0;
          }
        }
        description {
          state: "win" 0.1;
          inherit: "default" 0.0;
          color: 200 200 200 80;
        }
      }
      part {
        name: "sad bomb";
        type: IMAGE;
        description {
          state: "default" 0.0;
          image {
            normal: "empty.png";
          }
          rel1 {
            relative: 0.1 0.3;
            offset: 0 0;
          }
          rel2 {
            relative: 0.4 0.6;
            offset: 0 0;
          }
        }
        description {
          state: "win" 0.1;
          inherit: "default" 0.0;
          image {
            normal: "bomb-sad.png";
          }
        }
      }
      part {
        name: "you win";
        type: TEXT;
        effect: SOFT_SHADOW;
        scale: 1;
        description {
          state: "default" 0.0;
          text {
            text: "";
          }
          rel1 {
            relative: 0.4 0.3;
            offset: 0 0;
          }
          rel2 {
            relative: 0.9 0.6;
            offset: 0 0;
          }
        }
        description {
          state: "win" 0.1;
          inherit: "default" 0.0;
          color_class: "win";
          text {
            text: "You win!";
            font: "Title";
            size: 56;
            align: 0.5 0.5;
          }
        }
        description {
          state: "win2" 0.2;
          inherit: "win" 0.1;
          color_class: "win2";
        }
      }
      part {
        name: "score";
        type: TEXT;
        effect: SOFT_SHADOW;
        scale: 1;
        description {
          state: "default" 0.0;
          text {
            text: "";
          }
          rel1 {
            relative: 0.4 0.5;
            offset: 0 0;
          }
          rel2 {
            relative: 0.9 0.6;
            offset: 0 0;
          }
        }
        description {
          state: "win" 0.1;
          inherit: "default" 0.0;
          color_class: "win";
          text {
            text: "";
            font: "Title";
            size: 28;
            align: 0.5 0.5;
          }
        }
        description {
          state: "win2" 0.2;
          inherit: "win" 0.1;
          color_class: "win2";
        }
      }
      part {
        name: "best score";
        type: TEXT;
        effect: SOFT_SHADOW;
        scale: 1;
        description {
          state: "default" 0.0;
          text {
            text: "";
          }
          rel1 {
            relative: 0.1 0.7;
            offset: 0 0;
          }
          rel2 {
            relative: 0.9 0.9;
            offset: 0 0;
          }
        }
        description {
          state: "win" 0.1;
          inherit: "default" 0.0;
        }
        description {
          state: "win2" 0.1;
          inherit: "default" 0.0;
          color_class: "win";
          text {
            text: "";
            font: "Title";
            size: 46;
            align: 0.5 0.5;
          }
        }
      }

    }
    programs {
      program {
        signal: "you win";
        action: STATE_SET "win" 0.1;
        target: "win bg";
        target: "sad bomb";
        target: "you win";
        target: "score";
        target: "best score";
        after: "win2";
      }
      program {
        name: "win2";
        action: STATE_SET "win2" 0.2;
        target: "you win";
        target: "score";
        target: "best score";
        transition: BOUNCE 2 0 20;
      }
      program {
        signal: "normal";
        action: STATE_SET "default" 0.0;
        target: "win bg";
        target: "sad bomb";
        target: "you win";
        target: "score";
        target: "best score";
      }
    }
  }
}
